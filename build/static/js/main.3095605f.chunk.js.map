{"version":3,"sources":["components/header/index.jsx","hooks/useSubmit.js","components/addNewTodo/index.jsx","components/todoItem/index.jsx","components/todoList/index.jsx","components/footer/index.jsx","reducers/index.js","App.js","index.js"],"names":["navItems","title","status","Header","useContext","ContextStore","state","dispatch","navItemHandler","item","type","payload","map","className","onClick","useSubmitHandler","callback","inputValue","useCallback","e","preventDefault","alert","defaultNewTodo","todoTitle","todoComment","todoDate","todoTime","isStarred","isCompleted","isEditing","AddNewTodo","useState","newTodo","setNewTodo","isEditingNewTodo","setIsEditingNewTodo","toggleNewTodo","editNewTodo","name","currentTarget","dataset","target","value","submitHandler","onSubmit","data-name","checked","onChange","placeholder","icon","faStar","faPen","faCalendarAlt","faFile","faCommentDots","faTimes","todoId","Date","now","faPlus","TodoItem","todo","cacheTodo","setCacheTodo","isEditingTodo","setIsEditingTodo","editTodo","toggleTodo","faTrashAlt","split","join","TodoList","todos","filter","todosFilter","Footer","leftNum","length","completedNum","sortTodos","sort","a","b","reducer","action","index","findIndex","newTodos","createContext","initialState","JSON","parse","localStorage","getItem","App","useReducer","useEffect","setLocalStorage","window","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAKMA,G,MAAW,CACf,CAACC,MAAO,WAAYC,OAAQ,OAC5B,CAACD,MAAO,cAAeC,OAAQ,cAC/B,CAACD,MAAO,YAAaC,OAAQ,eA+BhBC,EA5BA,WAAO,IAAD,EACSC,qBAAWC,GAA/BC,EADW,EACXA,MAAOC,EADI,EACJA,SAETC,EAAiB,SAACC,GACtB,OAAO,WACLF,EAAS,CAAEG,KAAM,cAAeC,QAASF,EAAKP,WAIlD,OACE,iCACE,8BACE,6BACGF,EAASY,KAAI,SAAAH,GACZ,OACE,oBACII,UAAS,mBAAcP,EAAMJ,SAAWO,EAAKP,OAAS,SAAW,IACjEY,QAASN,EAAeC,GAF5B,SAGKA,EAAKR,OAHDQ,EAAKP,kB,kCCxBb,SAASa,EAAiBC,EAAUC,GAC/C,OAAOC,uBAAY,SAAAC,GACjBA,EAAEC,iBACGH,EAGHD,IAFAK,MAAO,6DCGf,IAAMC,EAAiB,CACrBC,UAAW,GACXC,YAAa,GACbC,SAAU,GACVC,SAAU,GACVC,WAAW,EACXC,aAAa,EACbC,WAAW,GAyHEC,EArHI,WAAO,IAChBvB,EAAaH,qBAAWC,GAAxBE,SADe,EAGOwB,mBAAST,GAHhB,mBAGhBU,EAHgB,KAGPC,EAHO,OAIyBF,oBAAS,GAJlC,mBAIhBG,EAJgB,KAIEC,EAJF,KAMjBC,EAAgB,WACpBD,GAAqBD,GACrBD,EAAWX,IAGPe,EAAc,SAAClB,GACnB,IAAMmB,EAAOnB,EAAEoB,cAAcC,QAAQF,KAGnCL,EADW,cAATK,GAAiC,gBAATA,EACf,2BAAIN,GAAL,kBAAeM,GAAQN,EAAQM,KAE9B,2BAAIN,GAAL,kBAAeM,EAAOnB,EAAEsB,OAAOC,UAIvCC,EAAgB5B,EAAiBqB,EAAeJ,EAAQT,WAE9D,OACE,0BAASV,UAAU,WAAnB,UACE,wBAAQA,UAAU,WAAWC,QAASsB,EAAtC,wBACA,uBAAMvB,UAAS,uCAAkCqB,EAAmB,SAAW,IACzEU,SAAUD,EADhB,UAEE,sBAAM9B,UAAS,mBAAcmB,EAAQL,UAAY,SAAW,IAA5D,UACE,wBAAOd,UAAU,aAAjB,UACE,uBACEA,UAAU,WACVH,KAAK,WACLmC,YAAU,cACVC,QAASd,EAAQJ,YACjBmB,SAAUV,IAEZ,uBACExB,UAAU,0BACVH,KAAK,OACLsC,YAAY,4BACZH,YAAU,YACVH,MAAOV,EAAQT,UACfwB,SAAUV,OAGd,sBAAKxB,UAAU,eAAf,UACE,sBAAMA,UAAU,OAAOgC,YAAU,YAAY/B,QAASuB,EAAtD,SACE,cAAC,IAAD,CAAiBY,KAAMC,QAEzB,sBAAMrC,UAAU,cAAhB,SACE,cAAC,IAAD,CAAiBoC,KAAME,cAI7B,sBAAKtC,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,OAAd,UACE,cAAC,IAAD,CAAiBoC,KAAMG,MADzB,cAGA,sBAAKvC,UAAU,gBAAf,UACE,uBACEA,UAAU,WACVH,KAAK,OACLmC,YAAU,WACVE,SAAUV,IAEZ,uBACExB,UAAU,WACVH,KAAK,OACLmC,YAAU,WACVE,SAAUV,UAIhB,sBAAKxB,UAAU,OAAf,UACE,+BAAI,cAAC,IAAD,CAAiBoC,KAAMI,MAA3B,UACA,wBAAOxC,UAAU,SAAjB,UACE,uBAAOA,UAAU,eAAeH,KAAK,SACrC,sBAAMG,UAAU,cAAhB,qBAGJ,sBAAKA,UAAU,UAAf,UACE,+BACE,cAAC,IAAD,CAAiBoC,KAAMK,MADzB,aAGA,0BACEzC,UAAU,cACVmC,YAAY,yBACZH,YAAU,cACVH,MAAOV,EAAQR,YACfuB,SAAUV,UAIhB,sBAAKxB,UAAU,8BAAf,UACE,yBACEH,KAAK,SACLG,UAAU,kCACVC,QAASsB,EAHX,eAKG,cAAC,IAAD,CAAiBa,KAAMM,MAL1B,YAOA,yBACE1C,UAAU,oCACVC,QAAS,kBAAMP,EAAS,CAACG,KAAM,WAAYC,QAAQ,2BAAKqB,GAAN,IAAewB,OAAQC,KAAKC,WAFhF,UAIE,cAAC,IAAD,CAAiBT,KAAMU,MAJzB,2BCUGC,G,MA7HE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACTtD,EAAaH,qBAAWC,GAAxBE,SADmB,EAEOwB,mBAAS,eAAI8B,IAFpB,mBAEpBC,EAFoB,KAETC,EAFS,OAGehC,oBAAS,GAHxB,mBAGpBiC,EAHoB,KAGLC,EAHK,KAKrBC,EAAW,SAAC/C,GAChB,IAAMmB,EAAOnB,EAAEoB,cAAcC,QAAQF,KACrCyB,EAAa,2BAAID,GAAL,kBAAiBxB,EAAOnB,EAAEsB,OAAOC,UAGzCyB,EAAa,WACjBF,GAAkBD,IAGdrB,EAAgB5B,EAAiBoD,EAAYL,EAAUvC,WAE7D,OACE,uBAAMV,UAAS,oBAAemD,EAAgB,SAAW,IACnDpB,SAAUD,EADhB,UAEE,sBAAK9B,UAAS,mBAAcgD,EAAKlC,UAAY,SAAW,IAAxD,UACE,sBAAKd,UAAU,aAAf,UACE,0CACA,0CACA,6CAEF,wBAAOA,UAAU,aAAjB,UACE,uBACEA,UAAU,WACVH,KAAK,WACLoC,QAASe,EAAKjC,YACdmB,SAAU,kBAAMxC,EAAS,CAAEG,KAAM,gBAAiBC,QAAS,CAACkD,aAE9D,uBACEhD,UAAU,YACVH,KAAK,OACLsC,YAAY,4BACZN,MAAOoB,EAAUvC,UACjBsB,YAAU,YACVE,SAAUmB,OAGd,sBAAKrD,UAAU,eAAf,UACE,sBAAMA,UAAU,OAAOC,QAAS,kBAAMP,EAAS,CAAEG,KAAM,YAAaC,QAAS,CAACkD,WAA9E,SACE,cAAC,IAAD,CAAiBZ,KAAMC,QAEzB,sBAAMrC,UAAU,MAAMC,QAASqD,EAA/B,SACE,cAAC,IAAD,CAAiBlB,KAAME,QAEzB,sBAAMtC,UAAU,SAASC,QAAS,kBAAMP,EAAS,CAAEG,KAAM,cAAeC,QAAS,CAACkD,KAAMC,MAAxF,SACE,cAAC,IAAD,CAAiBb,KAAMmB,WAG3B,sBAAKvD,UAAU,aAAf,UACE,iCACE,cAAC,IAAD,CAAiBoC,KAAMG,IAAevC,UAAS,UAAKiD,EAAUrC,SAAW,SAAW,MACpF,sBAAMZ,UAAU,YAAhB,SAA6BgD,EAAKpC,SAAS4C,MAAM,KAAKC,KAAK,UAE7D,cAAC,IAAD,CAAiBrB,KAAMI,MACvB,cAAC,IAAD,CAAiBJ,KAAMK,IAAezC,UAAWiD,EAAUtC,YAAc,SAAW,WAGxF,sBAAKX,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,+BAAI,cAAC,IAAD,CAAiBoC,KAAMG,MAA3B,cACA,sBAAKvC,UAAU,gBAAf,UACE,uBACEA,UAAU,OACVH,KAAK,OACLmC,YAAU,WACVH,MAAOoB,EAAUrC,SACjBsB,SAAUmB,IAEZ,uBACErD,UAAU,OACVH,KAAK,OACLmC,YAAU,WACVH,MAAOoB,EAAUpC,SACjBqB,SAAUmB,UAIhB,sBAAKrD,UAAU,OAAf,UACE,+BAAI,cAAC,IAAD,CAAiBoC,KAAMI,MAA3B,UACA,wBAAOxC,UAAU,SAAjB,UACE,uBAAOA,UAAU,eAAeH,KAAK,SACrC,sBAAMG,UAAU,cAAhB,qBAGJ,sBAAKA,UAAU,UAAf,UACE,+BAAI,mBAAGA,UAAU,wBAAjB,aACA,0BACEA,UAAU,kBACVmC,YAAY,yBACZH,YAAU,cACVH,MAAOoB,EAAUtC,YACjBuB,SAAUmB,UAIhB,sBAAKrD,UAAU,cAAf,UACE,yBACEH,KAAK,SACLG,UAAU,gBACVC,QAAS,kBAAMiD,EAAaF,IAH9B,eAKG,mBAAGhD,UAAU,iBALhB,YAOA,yBACEH,KAAK,SACLG,UAAU,iBACVC,QAAS,kBAAMP,EAAS,CAAEG,KAAM,YAAaC,QAAS,CAACkD,KAAMC,MAH/D,UAKE,cAAC,IAAD,CAAiBb,KAAMU,MALzB,qBCtFKY,G,MAzBE,WAAO,IACdjE,EAAUF,qBAAWC,GAArBC,MAEAkE,EAAkBlE,EAAlBkE,MAAOtE,EAAWI,EAAXJ,OAUf,OACE,yBAASW,UAAU,YAAnB,SATkB,SAAC2D,EAAOtE,GAC1B,OAAOsE,EAAMC,QAAO,SAAAZ,GAClB,MAAe,QAAX3D,IACW,eAAXA,GAAiC2D,EAAKjC,YAC3B,cAAX1B,EAA+B2D,EAAKjC,iBAAxC,MAOE8C,CAAYF,EAAOtE,GAAQU,KAAI,SAAAiD,GAC7B,OACE,cAAC,EAAD,CAA4BA,KAAMA,GAAnBA,EAAKL,eCSjBmB,G,MA5BA,WAAO,IACZrE,EAAUF,qBAAWC,GAArBC,MAEFsE,EAAUtE,EAAMkE,MAAMC,QAAO,SAAAZ,GAAI,OAAKA,EAAKjC,eAAaiD,OACxDC,EAAexE,EAAMkE,MAAMK,OAASD,EAG1C,MAFyC,cAAjBtE,EAAMJ,OAI1B,mCACE,qBAAIW,UAAU,cAAd,UACI+D,EADJ,IACc,+BAAQA,EAAU,EAAI,QAAU,SAD9C,WAGA,mBAAG/D,UAAU,OAAb,uGAKF,mCACE,qBAAIA,UAAU,aAAd,UACIiE,EADJ,IACmB,+BAAQA,EAAe,EAAI,QAAU,SADxD,gBAGA,mBAAGjE,UAAU,OAAb,yG,QC3BFkE,EAAY,SAACP,GACjB,OAAO,YAAIA,GAAOQ,MAAK,SAACC,EAAGC,GAGrB,OAFcD,EAAEtD,UAAY,IAAM,IAAMsD,EAAErD,aAAe,IAAM,KACjDsD,EAAEvD,UAAY,IAAM,IAAMuD,EAAEtD,aAAe,IAAM,QAyDxDuD,EApDC,SAAC7E,EAAO8E,GACtB,OAAQA,EAAO1E,MACb,IAAK,WACH,OAAO,2BAAIJ,GAAX,IAAkBkE,MAAOO,EAAU,GAAD,mBAAKzE,EAAMkE,OAAX,CAAkBY,EAAOzE,aAG7D,IAAK,cACH,IAAM6D,EAAQlE,EAAMkE,MAAMC,QAAO,SAAAhE,GAAI,OAAIA,EAAK+C,SAAW4B,EAAOzE,QAAQkD,KAAKL,UAC7E,OAAO,2BAAIlD,GAAX,IAAkBkE,UAGpB,IAAK,YACH,IAAMa,EAAQ/E,EAAMkE,MAAMc,WAAU,SAAA7E,GAAI,OAAIA,EAAK+C,SAAW4B,EAAOzE,QAAQkD,KAAKL,UAEhF,OADAlD,EAAMkE,MAAMa,GAASD,EAAOzE,QAAQkD,KAC7B,eAAIvD,GAGb,IAAK,YACH,IAAM+E,EAAQ/E,EAAMkE,MAAMc,WAAU,SAAA7E,GAAI,OAAIA,EAAK+C,SAAW4B,EAAOzE,QAAQkD,KAAKL,UAC1E+B,EAAQ,YAAOjF,EAAMkE,OAO3B,OALAe,EAASF,GAAT,2BACKE,EAASF,IADd,IAEE1D,WAAY4D,EAASF,GAAO1D,YAGvB,2BAAIrB,GAAX,IAAkBkE,MAAOO,EAAUQ,KAGrC,IAAK,gBACH,IAAMF,EAAQ/E,EAAMkE,MAAMc,WAAU,SAAA7E,GAAI,OAAIA,EAAK+C,SAAW4B,EAAOzE,QAAQkD,KAAKL,UAC1E+B,EAAQ,YAAOjF,EAAMkE,OAO3B,OALAe,EAASF,GAAT,2BACKE,EAASF,IADd,IAEEzD,aAAc2D,EAASF,GAAOzD,cAGzB,2BAAItB,GAAX,IAAkBkE,MAAOO,EAAUQ,KAGrC,IAAK,cACH,OAAO,2BACFjF,GADL,IACYJ,OAAQkF,EAAOzE,UAI7B,QACE,OAAOL,IChDPD,EAAemF,0BAEfC,EAAe,CACnBjB,MAAOkB,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GACzD3F,OAAQ,OAGJ4F,EAAM,WAAO,IAAD,EACUC,qBAAWZ,EAASM,GAD9B,mBACTnF,EADS,KACFC,EADE,OAEsBwB,mBAAS,OAF/B,6BAIhBiE,qBAAU,WACRC,MACE,CAAC3F,EAAMkE,QAEX,IAAMyB,EAAkB,WACtBC,OAAON,aAAaO,QAAQ,aAAcT,KAAKU,UAAU9F,EAAMkE,SAGjE,OACE,cAACnE,EAAagG,SAAd,CAAuB3D,MAAO,CAACpC,QAAOC,YAAtC,SACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,IACE,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,EAAD,U,MC9BRyF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3095605f.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport './index.scss';\n\nimport { ContextStore } from '../../App'\n\nconst navItems = [\n  {title: 'My Tasks', status: 'all'}, \n  {title: 'In progress', status: 'inProgress'},\n  {title: 'Completed', status: 'completed'}\n];\n\nconst Header = () => {\n  const { state, dispatch } = useContext(ContextStore);\n\n  const navItemHandler = (item) => {\n    return () => {\n      dispatch({ type: 'SWITCH_TODO', payload: item.status})\n    }\n  }\n\n  return (\n    <header>\n      <nav>\n        <ul>\n          {navItems.map(item => {\n            return (\n              <li key={item.status}\n                  className={`nav-item ${state.status === item.status ? 'active' : ''}`}\n                  onClick={navItemHandler(item)}>\n                  {item.title}\n              </li>\n            )\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useCallback } from \"react\";\n\nexport default function useSubmitHandler(callback, inputValue) {\n    return useCallback(e => {\n      e.preventDefault();\n      if (!inputValue) {\n        alert ('請輸入代辦事項名稱');\n      }else{\n        callback();\n      }\n    });\n}\n","import { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faPen, faCalendarAlt, faCommentDots, faFile, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './index.scss';\n\nimport { useContext } from 'react';\nimport {ContextStore} from '../../App';\nimport useSubmitHandler from \"../../hooks/useSubmit\";\n\nconst defaultNewTodo = {\n  todoTitle: \"\",\n  todoComment: \"\",\n  todoDate: \"\",\n  todoTime: \"\",\n  isStarred: false,\n  isCompleted: false,\n  isEditing: false,\n}\n\n\nconst AddNewTodo = () => {\n  const { dispatch } = useContext(ContextStore);\n\n  const [newTodo, setNewTodo] = useState(defaultNewTodo);\n  const [isEditingNewTodo, setIsEditingNewTodo] = useState(false);\n\n  const toggleNewTodo = () => {\n    setIsEditingNewTodo(!isEditingNewTodo);\n    setNewTodo(defaultNewTodo);\n  }\n\n  const editNewTodo = (e) => {\n    const name = e.currentTarget.dataset.name;\n\n    if (name === 'isStarred' || name === 'isCompleted'){\n      setNewTodo({...newTodo, [name]: !newTodo[name]});\n    }else{\n      setNewTodo({...newTodo, [name]: e.target.value});\n    }\n  }\n\n  const submitHandler = useSubmitHandler(toggleNewTodo, newTodo.todoTitle);\n\n  return (\n    <section className=\"new-todo\">\n      <button className=\"add-todo\" onClick={toggleNewTodo}>+ Add Task</button>\n      <form className={`edit-area new-todo-edit-area ${isEditingNewTodo ? 'active' : ''}`}\n            onSubmit={submitHandler}>\n        <div  className={`todo-bar ${newTodo.isStarred ? 'active' : ''}`}>\n          <label className=\"todo-title\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              data-name=\"isCompleted\"\n              checked={newTodo.isCompleted}\n              onChange={editNewTodo}\n            />\n            <input\n              className=\"todo-name new-todo-name\"\n              type=\"text\"\n              placeholder=\"Type Something Here…\"\n              data-name=\"todoTitle\"\n              value={newTodo.todoTitle}\n              onChange={editNewTodo}\n            />\n          </label>\n          <div className=\"icon-wrapper\">\n            <span className=\"star\" data-name=\"isStarred\" onClick={editNewTodo}>\n              <FontAwesomeIcon icon={faStar}/>\n            </span>\n            <span className=\"pen new-pen\">\n              <FontAwesomeIcon icon={faPen}/>\n            </span>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"deadline\">\n              <h3 className=\"icon\">\n                <FontAwesomeIcon icon={faCalendarAlt}/>Deadline\n              </h3>\n              <div className=\"input-wrapper\">\n                <input\n                  className=\"new-date\"\n                  type=\"date\"\n                  data-name=\"todoDate\"\n                  onChange={editNewTodo}\n                />\n                <input\n                  className=\"new-time\"\n                  type=\"time\"\n                  data-name=\"todoTime\"\n                  onChange={editNewTodo}\n                />\n              </div>\n            </div>\n            <div className=\"file\">\n              <h3><FontAwesomeIcon icon={faFile}/>File</h3>\n              <label className=\"upload\">\n                <input className=\"upload-input\" type=\"file\" />\n                <span className=\"upload-icon\">+</span>\n              </label>\n            </div>\n            <div className=\"comment\">\n              <h3>\n                <FontAwesomeIcon icon={faCommentDots}/>Comment\n              </h3>\n              <textarea\n                className=\"add-comment\"\n                placeholder=\"Type your memo here...\"\n                data-name=\"todoComment\"\n                value={newTodo.todoComment}\n                onChange={editNewTodo}\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"card-footer new-card-footer\">\n            <button\n              type=\"submit\"\n              className=\"button-cancel new-button-cancel\"\n              onClick={toggleNewTodo}\n            >\n              \b<FontAwesomeIcon icon={faTimes}/>Cancel\n            </button>\n            <button\n              className=\"button-confirm new-button-confirm\"\n              onClick={() => dispatch({type: 'ADD_TODO', payload: {...newTodo, todoId: Date.now()}})}\n            >\n              <FontAwesomeIcon icon={faPlus}/>Add Task\n            </button>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AddNewTodo;","import { useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faPen, faTrashAlt, faCalendarAlt, faCommentDots, faFile, faPlus, faTimes} from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nimport { ContextStore } from '../../App';\nimport useSubmitHandler from \"../../hooks/useSubmit\";\n\nconst TodoItem = ({todo}) => {\n  const { dispatch } = useContext(ContextStore)\n  const [cacheTodo, setCacheTodo] = useState({...todo});\n  const [isEditingTodo, setIsEditingTodo] = useState(false);\n\n  const editTodo = (e) => {\n    const name = e.currentTarget.dataset.name;\n    setCacheTodo({...cacheTodo, [name]: e.target.value});\n  }\n\n  const toggleTodo = () => {\n    setIsEditingTodo(!isEditingTodo);\n  }\n\n  const submitHandler = useSubmitHandler(toggleTodo, cacheTodo.todoTitle);\n\n  return (\n    <form className={`edit-area ${isEditingTodo ? 'active' : ''}`}\n          onSubmit={submitHandler}>\n      <div className={`todo-bar ${todo.isStarred ? 'active' : ''}`}>\n        <div className=\"hover-dots\">\n          <span>∙</span>\n          <span>∙</span>\n          <span>∙</span>\n        </div>\n        <label className=\"todo-title\">\n          <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            checked={todo.isCompleted}\n            onChange={() => dispatch({ type: 'COMPLETE_TODO', payload: {todo}})}\n          />\n          <input\n            className=\"todo-name\"\n            type=\"text\"\n            placeholder=\"Type Something Here…\"\n            value={cacheTodo.todoTitle}\n            data-name=\"todoTitle\"\n            onChange={editTodo}\n          />\n        </label>\n        <div className=\"icon-wrapper\">\n          <span className=\"star\" onClick={() => dispatch({ type: 'STAR_TODO', payload: {todo}})}>\n            <FontAwesomeIcon icon={faStar}/>\n          </span>\n          <span className=\"pen\" onClick={toggleTodo}>\n            <FontAwesomeIcon icon={faPen}/>\n          </span>\n          <span className=\"delete\" onClick={() => dispatch({ type: 'DELETE_TODO', payload: {todo: cacheTodo}})}>\n            <FontAwesomeIcon icon={faTrashAlt}/>\n          </span>\n        </div>\n        <div className=\"hint-icons\">\n          <span>\n            <FontAwesomeIcon icon={faCalendarAlt} className={`${cacheTodo.todoDate ? 'active' : ''}`}/>\n            <span className=\"hint-date\">{todo.todoDate.split('-').join('/')}</span>\n          </span>\n          <FontAwesomeIcon icon={faFile}/>\n          <FontAwesomeIcon icon={faCommentDots} className={cacheTodo.todoComment ? 'active' : ''}/>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"deadline\">\n            <h3><FontAwesomeIcon icon={faCalendarAlt}/>Deadline</h3>\n            <div className=\"input-wrapper\">\n              <input\n                className=\"date\"\n                type=\"date\"\n                data-name=\"todoDate\"\n                value={cacheTodo.todoDate}\n                onChange={editTodo}\n              />\n              <input\n                className=\"time\"\n                type=\"time\"\n                data-name=\"todoTime\"\n                value={cacheTodo.todoTime}\n                onChange={editTodo}\n              />\n            </div>\n          </div>\n          <div className=\"file\">\n            <h3><FontAwesomeIcon icon={faFile}/>File</h3>\n            <label className=\"upload\">\n              <input className=\"upload-input\" type=\"file\" />\n              <span className=\"upload-icon\">+</span>\n            </label>\n          </div>\n          <div className=\"comment\">\n            <h3><i className=\"far fa-comment-dots\"></i>Comment</h3>\n            <textarea\n              className=\"comment-content\"\n              placeholder=\"Type your memo here...\"\n              data-name=\"todoComment\"\n              value={cacheTodo.todoComment}\n              onChange={editTodo}\n            ></textarea>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <button\n            type=\"submit\"\n            className=\"button-cancel\"\n            onClick={() => setCacheTodo(todo)}\n          >\n            \b<i className=\"fas fa-times\"></i>Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-confirm\"\n            onClick={() => dispatch({ type: 'EDIT_TODO', payload: {todo: cacheTodo}})}\n          >\n            <FontAwesomeIcon icon={faPlus}/>Save\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem;","import React, { useContext } from 'react';\nimport TodoItem from '../todoItem';\nimport './index.scss';\n\nimport { ContextStore } from '../../App'\n\nconst TodoList = () => {\n  const { state } = useContext(ContextStore);\n\n  const { todos, status } = state;\n\n  const todosFilter = (todos, status) => {\n    return todos.filter(todo => {\n      if (status === 'all') return true;\n      if (status === 'inProgress') return !todo.isCompleted;\n      if (status === 'completed') return todo.isCompleted;\n    })\n  }\n\n  return (\n    <section className=\"todo-list\">\n      {\n        todosFilter(todos, status).map(todo => {\n          return (\n            <TodoItem key={todo.todoId} todo={todo}/>\n          )\n      })}\n    </section>\n  )\n}\n\nexport default TodoList;\n","import './index.scss';\n\nimport { useContext } from 'react';\nimport { ContextStore } from '../../App'\n\nconst Footer = () => {\n  const { state } = useContext(ContextStore)\n  \n  const leftNum = state.todos.filter(todo => !todo.isCompleted).length;\n  const completedNum = state.todos.length - leftNum;\n  const isShowLeftCount = state.status !== 'completed';\n\n  if (isShowLeftCount) {\n    return (\n      <footer>\n        <h4 className=\"todo-count \">\n          { leftNum } <span>{ leftNum > 1 ? 'tasks' : 'task' }</span> left\n        </h4>\n        <p className=\"hint\">點擊 ☆ 任務置頂，任務完成置底</p>\n      </footer>\n    )\n  }else {\n    return (\n      <footer>\n        <h4 className=\"todo-count\">\n          { completedNum } <span>{ completedNum > 1 ? 'tasks' : 'task' }</span> completed\n        </h4>\n        <p className=\"hint\">點擊 ☆ 任務置頂，任務完成置底</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;\n","const sortTodos = (todos) => {\n  return [...todos].sort((a, b) => {\n        let scoreA = (a.isStarred ? 100 : 0) + (a.isCompleted ? -200 : 0);\n        let scoreB = (b.isStarred ? 100 : 0) + (b.isCompleted ? -200 : 0);\n        return scoreA - scoreB;\n      })\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO': {\n      return {...state, todos: sortTodos([...state.todos, action.payload])};\n    }\n\n    case 'DELETE_TODO': {\n      const todos = state.todos.filter(item => item.todoId !== action.payload.todo.todoId);\n      return {...state, todos}; \n    }      \n      \n    case 'EDIT_TODO': {\n      const index = state.todos.findIndex(item => item.todoId === action.payload.todo.todoId);\n      state.todos[index] = action.payload.todo;\n      return {...state}; \n    }\n  \n    case 'STAR_TODO': {\n      const index = state.todos.findIndex(item => item.todoId === action.payload.todo.todoId);\n      const newTodos = [...state.todos];\n\n      newTodos[index] = {\n        ...newTodos[index],\n        isStarred: !newTodos[index].isStarred,\n      };\n\n      return {...state, todos: sortTodos(newTodos)};\n    }\n\n    case 'COMPLETE_TODO': {\n      const index = state.todos.findIndex(item => item.todoId === action.payload.todo.todoId);\n      const newTodos = [...state.todos];\n\n      newTodos[index] = {\n        ...newTodos[index],\n        isCompleted: !newTodos[index].isCompleted,\n      };\n\n      return {...state, todos: sortTodos(newTodos)};\n    }\n\n    case 'SWITCH_TODO': {\n      return {\n        ...state, status: action.payload\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React, { useState, createContext, useReducer, useEffect } from \"react\";\nimport Header from './components/header';\nimport AddNewTodo from './components/addNewTodo';\nimport TodoList from './components/todoList';\nimport Footer from './components/footer'\n\nimport reducer from './reducers'\n\nconst ContextStore = createContext();\n\nconst initialState = {\n  todos: JSON.parse(localStorage.getItem('react-todo')) || [],\n  status: 'all'\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const [filterState, setFilterState] = useState('all');\n\n  useEffect(() => {\n    setLocalStorage();\n   }, [state.todos]);\n  \n  const setLocalStorage = () => {\n    window.localStorage.setItem('react-todo', JSON.stringify(state.todos));\n  }\n  \n  return (\n    <ContextStore.Provider value={{state, dispatch}}>\n      <div className=\"App\">\n        <Header/>\n          <main>\n            <AddNewTodo/>\n            <TodoList/>\n          </main>\n        <Footer/>\n      </div>\n    </ContextStore.Provider>\n  );\n}\n\nexport { App, ContextStore};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}